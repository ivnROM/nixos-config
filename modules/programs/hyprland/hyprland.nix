{ pkgs, config, lib, inputs, ...}:
let 
  host = config.home.sessionVariables.HOSTNAME or "default";
  monitorConfig = {
    "maelstrom" = [ "eDP-1, 1920x1080@60.01, 0x0, 1" ",preferred, auto, 1, mirror, eDP-1"
    ];
    "vortex" = [
      "HDMI-A-1, 1920x1080@75.01, 0x0, 1" ",preferred, auto, 1, mirror, HDMI-A-1"
    ];
    "default" = [
      "eDP-1, auto, 0x0, 1" ",preferred, auto, 1, mirror, eDP-1"
    ];
  };
  selectedMonitor = monitorConfig.${host} or monitorConfig."default";
  pyprlandToml = ./pyprland/pyprland.toml;
  tofi-launcher = "${pkgs.tofi}/bin/tofi";
in {  

  xdg.configFile."hypr/pyprland.toml".source = pyprlandToml;
  services.hyprpolkitagent.enable = true;

  wayland.windowManager.hyprland = {
    enable = true;
    package = null;
    portalPackage = null;

    plugins = [ 
      inputs.Hyprspace.packages.${pkgs.system}.Hyprspace
    ];

    settings = {
      autogenerated = 0;
      monitor = selectedMonitor;

      "$mainMod" = "SUPER";
      "$terminal" = "kitty";
      # "$fileManager" = "dolphin";
      # "$menu" = "bemenu-run -b -l 5 down -c -W 0.3";
      "$menu" = "bash -c 'exec $(tofi-run)'";

      general = {
        gaps_in = 2;
        gaps_out = 5;
        # gaps_in = 0;
        # gaps_out = 0;
        "col.active_border" = lib.mkDefault "rgba(33ccffee) rgba(00ff99ee) 45deg";
        "col.inactive_border" = lib.mkDefault "rgba(595959aa)";
        border_size = 0;

        resize_on_border = true;
        allow_tearing = false;
        layout = "dwindle";
      };

      decoration = {
        rounding = 10;
        rounding_power = 2;
        active_opacity = 1.0;
        inactive_opacity = 1.0;

        shadow = {
          enabled = "false";
          range = 4;
          render_power = 3;
          color = lib.mkDefault "rgba(1a1a1aee)";
        };

        blur = {
          enabled = "true";
          size = 8;
          passes = 2;
          vibrancy = 0.1696;
          ignore_opacity = true;
          xray = true;
          special = false;
        };
      };

      animations = {
        enabled = "no";
        bezier = [
          "easeInOutSine,0.445, 0.05, 0.55, 0.95"
          "easeOutQuint,0.23,1,0.32,1"
          "easeInOutCubic,0.65,0.05,0.36,1"
          "linear,0,0,1,1"
          "almostLinear,0.5,0.5,0.75,1.0"
          "quick,0.15,0,0.1,1"
        ];
      };

      input = {
        kb_layout = "latam";
        #kb_variant =
        #kb_model =
        #kb_options =
        #kb_rules =

        follow_mouse = 1;

        sensitivity = 0; # -1.0 - 1.0, 0 means no modification.

        touchpad = {
          natural_scroll = "true";
        };
      };

      cursor = {
        no_hardware_cursors = 1;
      };

      device = {
        name = "epic-mouse-v1";
        sensitivity = "-0.5";
      };

      gestures = {
        workspace_swipe = "true";
      };

      misc = {
        force_default_wallpaper = 1;
        disable_hyprland_logo = "true";
      };

      bind = [
        "$mainMod, RETURN, exec, $terminal"
        "$mainMod SHIFT, Q, killactive"
        "$mainMod SHIFT, E, exit"
        "$mainMod SHIFT, SPACE, togglefloating"
        "$mainMod, C, exec, qalculate-gtk"
        "$mainMod, B, exec, zen"
        # "$mainMod E, exec, dolphin"
        "$mainMod, D, exec, pkill $menu || $menu "
        "$mainMod, F, fullscreen"
        "$mainMod, E, exec, kitty -e yazi"
        ", PRINT, exec, hyprshot -m region --clipboard-only"
        "$mainMod, PRINT, exec, hyprshot -m window"
        "$mainMod SHIFT, PRINT, exec, hyprshot -m output"
        "$mainMod, Tab, exec, overview:toggle"
        # BEMENU 
        # "$mainMod, PERIOD, exec, pkill bemenu-openconfig || bemenu-openconfig"
        # "$mainMod, COMMA, exec, pkill bemenu-opennotes || bemenu-opennotes"
        # "$mainMod, M, exec, cliphist list | ${bemenuSettings} | cliphist decode | wl-copy"
        # TOFI
        "$mainMod, PERIOD, exec, pkill tofi-openconfig || tofi-openconfig"
        "$mainMod, COMMA, exec, pkill tofi-opennotes || tofi-opennotes"
        "$mainMod, M, exec, cliphist list | ${tofi-launcher} | cliphist decode | wl-copy"

        "$mainMod, F1, exec, pypr zoom"

        "$mainMod, h, movefocus, l"
        "$mainMod, l, movefocus, r"
        "$mainMod, k, movefocus, u"
        "$mainMod, j, movefocus, d"

        "$mainMod SHIFT, h, movewindow, l"
        "$mainMod SHIFT, l, movewindow, r"
        "$mainMod SHIFT, k, movewindow, u"
        "$mainMod SHIFT, j, movewindow, d"

        "$mainMod, 1, workspace, 1"
        "$mainMod, 2, workspace, 2"
        "$mainMod, 3, workspace, 3"
        "$mainMod, 4, workspace, 4"
        "$mainMod, 5, workspace, 5"
        "$mainMod, 6, workspace, 6"
        "$mainMod, 7, workspace, 7"
        "$mainMod, 8, workspace, 8"
        "$mainMod, 9, workspace, 9"

        "$mainMod SHIFT, 1, movetoworkspace, 1"
        "$mainMod SHIFT, 2, movetoworkspace, 2"
        "$mainMod SHIFT, 3, movetoworkspace, 3"
        "$mainMod SHIFT, 4, movetoworkspace, 4"
        "$mainMod SHIFT, 5, movetoworkspace, 5"
        "$mainMod SHIFT, 6, movetoworkspace, 6"
        "$mainMod SHIFT, 7, movetoworkspace, 7"
        "$mainMod SHIFT, 8, movetoworkspace, 8"
        "$mainMod SHIFT, 9, movetoworkspace, 9"
        "$mainMod SHIFT, 0, movetoworkspace, 10"

        "$mainMod, S, togglespecialworkspace, magic"
        "$mainMod SHIFT, S, movetoworkspace, special:magic"
        "$mainMod, SPACE, exec, hypr-togglefocus"

        #"$mainMod, R, submap, resize"
        #", escape, submap, reset"
        "$mainMod, mouse_down, workspace, e-1"
        "$mainMod, mouse_up, workspace, e+1"
      ];

      #binde = [
      #", l, resizeactive, 50 0"
      #", h, resizeactive, -50 0"
      #", k, resizeactive, 0 -40"
      #", j, resizeactive, 0 40"
      #];
      bindel = [
        # ",XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+"
        # ",XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-"
        # ",XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
        # ",XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"
        ",XF86MonBrightnessUp, exec, brightnessctl s 5%+"
        ",XF86MonBrightnessDown, exec, brightnessctl s 5%-"
        ",XF86AudioRaiseVolume, exec, volumectl -u up"
        ",XF86AudioLowerVolume, exec, volumectl -u down"
        ",XF86AudioMute, exec, volumectl toggle-mute"
        ",XF86AudioMicMute, exec, volumectl -m toggle-mute"
      ];

      bindm = [
        "$mainMod, mouse:272, movewindow"
        "$mainMod, mouse:272, resizewindow"
      ];


      submap = [
        "resize"
        "reset"
      ];

      windowrulev2 = [
        #"opacity 0.9 0.7, class:^(zen)$"
        "opacity 0.9 0.7, class:^(nemo)$"
        "opacity 0.9 0.7, class:^(libreoffice-writer)$"
        "opacity 0.9 0.7, title:^Hyprland System Info$"
        "float, class:^(qalculate-gtk)"
        "float, class:^(Tk)"
        "float, class:^(nemo)"
        "float, class:^(org.kde.ark)"
        "float, class:^(org.kde.dolphin)"
      ];

      workspace = [
        "special:exposed,gapsout:60,gapsin:30,bordersize:5,border:true,shadow:false"
      ];

      "exec-once" = [ 
        #"eww daemon"
        "swww-daemon"
        "swww img ${config.home.homeDirectory}/Pictures/Wallpapers/wallpaper.png --transition-type grow --transition-pos 0.5,0.5 --transition-fps 60"
        "pypr"
        "waybar"
        "wl-clip-persist --clipboard regular"
        "wl-paste --type text --watch cliphist store"

        "[workspace 1 silent] zen"
        "[workspace 2 silent] kitty"
        #"eww open bar"
      ];
    };
  };

  home.packages = with pkgs; [
    jq
    (pkgs.writeShellScriptBin "hypr-togglefocus" ''
      on=$(hyprctl -j getoption animations:enabled | jq --raw-output '.int')
      gaps_in=$(hyprctl -j getoption general:gaps_in | jq -r '.int')
      gaps_out=$(hyprctl -j getoption general:gaps_out | jq -r '.int')
      border_size=$(hyprctl -j getoption general:border_size | jq -r '.int')
      rounding=$(hyprctl -j getoption decoration:rounding | jq -r '.int')


      if [[ $on -eq 1 ]]; then
      hyprctl keyword animations:enabled 0
      hyprctl notify -1 1000 "rgb(98c379)" "Focus on"
      # hyprctl --batch keyword general:gaps_in 0
      # hyprctl --batch keyword general:gaps_out 0
      # hyprctl --batch keyword general:border_size 0
      # hyprctl --batch keyword decoration:rounding 0
      pkill waybar
      # notify-send -u low -t 1 "Focus off"
      else
      hyprctl keyword animations:enabled 1
      hyprctl notify -1 1000 "rgb(e06c75)" "Focus off"
      # hyprctl --batch keyword general:gaps_in $gaps_in
      # hyprctl --batch keyword general:gaps_out $gaps_out
      # hyprctl --batch keyword general:border_size $border_size
      # hyprctl --batch keyword decoration:rounding $rounding
      pkill waybar || waybar
      # notify-send -u low -t 100 "Focus on"
      fi  
      '')
  ];
}
